[
    // Auto-pair double quotes
    { "keys": ["\""], "command": "insert_snippet", "args": {"contents": "\"$0\""}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[\"a-zA-Z0-9_,.!?]$", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double", "match_all": true }
        ]
    },
    // Auto-pair single quotes
    { "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'$0'"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_,.!?]$", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true }
        ]
    },

    // Auto-pair asterisks (based on "Auto-pair single quotes" from the Default sublime keymap)
    { "keys": ["*"], "command": "insert_snippet", "args": {"contents": "*$0*"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "(?:^(\\s)*|foo)$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\\s|\\)|$)", "match_all": true },
            // { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
            // { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[*a-zA-Z0-9_]$", "match_all": true },
            // { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true },
        ]
    },
    { "keys": ["*"], "command": "insert_snippet", "args": {"contents": "*${0:$SELECTION}*"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
        ]
    },
    { "keys": ["*"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\*$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\*", "match_all": true },
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\*$", "match_all": true }, // allows nesting for strong/bold
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\*", "match_all": true },
        ]
    },

    // Auto-pair underscores (based on auto-pair asterisks)
    { "keys": ["_"], "command": "insert_snippet", "args": {"contents": "_$0_"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "(?:^(\\s)_|foo)$", "match_all": true }, // copy from asterisk
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\\s|\\)|$)", "match_all": true }, // copy from asterisk
        ]
    },
    { "keys": ["_"], "command": "insert_snippet", "args": {"contents": "_${0:$SELECTION}_"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
        ]
    },
    { "keys": ["_"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "_$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^_", "match_all": true },
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "_$", "match_all": true },  // allows nesting for strong/bold
            { "key": "following_text", "operator": "regex_contains", "operand": "^_", "match_all": true },
        ]
    },

    // Auto-pair backticks (based on auto-pair asterisks)
    { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
        ]
    },
    { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
        ]
    },
    { "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
        ]
    },

    /**
     * Insert link
     * - selection -> title
     * - clipboard -> URL
     */
    { "keys": ["ctrl+alt+l"], "command": "insert_snippet", "args": {"contents": "[$1]($2)$0"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
        ]
    },

    /**
     * Insert image
     * - selection -> caption
     * - clipboard -> URL
     */
    { "keys": ["ctrl+alt+i"], "command": "insert_snippet", "args": {"contents": "![$1]($2)$0"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            // { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
        ]
    },
    // Horizontal Rule
     { "keys": ["*"], "command": "run_macro_file", "args": {"file": "res://Packages/User/Markdown Horizontal Rule.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
            { "key": "setting.typewriter_mode_markdown", "operator": "equal", "operand": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\*\\*", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "\\*", "match_all": true },
        ]
    },
]